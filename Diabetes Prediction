import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

data = pd.read_csv("C:\\Users\\ASUS\\Downloads\\diabetes.csv")\\Replace the file path as per your path

# Data preprocessing outcome is the target variable
X = data.drop("Outcome", axis=1)
y = data["Outcome"]

# Handling missing or zero values, for simplicity replace zero values with mean of respective columns
X = X.replace(0, X.mean())
# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Standardize the features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)
# Model training
model = LogisticRegression()
model.fit(X_train_scaled, y_train)
# Model evaluation
y_pred = model.predict(X_test_scaled)
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy}")
print("Classification Report:\n", report)
